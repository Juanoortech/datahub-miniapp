# Generated by Django 5.1.3 on 2025-05-14 11:14

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BonusRule',
            fields=[
                ('rank', models.PositiveIntegerField(help_text='Rank for which the bonus applies (e.g., 1 for first place)', primary_key=True, serialize=False, verbose_name='Rank')),
                ('bonus_percentage', models.FloatField(help_text="Percentage of the user's balance to be given as a bonus", verbose_name='Bonus Percentage')),
            ],
            options={
                'verbose_name': 'Bonus Rule',
                'verbose_name_plural': 'Bonus Rules',
                'ordering': ['rank'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('wallet_address', models.CharField(max_length=64, primary_key=True, serialize=False, unique=True, verbose_name='Wallet Address')),
                ('name', models.CharField(verbose_name='Name')),
                ('photo', models.CharField(blank=True, default=None, null=True, verbose_name='Photo')),
                ('balance', models.BigIntegerField(default=0, verbose_name='Balance')),
                ('referral_code', models.UUIDField(default=uuid.uuid4, unique=True, verbose_name='Referral Code')),
                ('wallet_connect_code', models.UUIDField(default=uuid.uuid4, unique=True, verbose_name='Wallet connect code')),
                ('wallet_was_connected', models.BooleanField(default=False)),
                ('referral_level', models.SmallIntegerField(choices=[(1, '1 Level'), (2, '2 Level'), (3, '3 Level')], default=1, verbose_name='Level')),
                ('referral_earnings', models.BigIntegerField(default=0, verbose_name='Referral Earnings')),
                ('first_login', models.BooleanField(default=True, help_text='First Login flag to show the guide or not', verbose_name='First Login')),
                ('referral_user', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='referral_user_connected', to='accounts.user', verbose_name='Referral')),
            ],
            options={
                'verbose_name': 'Web3 User',
                'verbose_name_plural': 'Web3 Users',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sum_of_transaction', models.BigIntegerField(default=0, verbose_name='Sum of Transaction')),
                ('internal_type', models.CharField(choices=[('Deposit', 'Deposit'), ('Withdraw', 'Withdraw')], verbose_name='Type')),
                ('type_of_deposit', models.CharField(blank=True, choices=[('Challenge', 'Challenge'), ('Task', 'Task'), ('Validation', 'Validation'), ('Referral', 'Referral')], null=True, verbose_name='Deposit Type')),
                ('status', models.CharField(choices=[('Successful', 'Successful'), ('Work In Progress', 'Wip'), ('Declined', 'Declined')], verbose_name='Status')),
                ('date_and_time', models.DateTimeField(auto_now_add=True, verbose_name='Date and Time')),
                ('from_user', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='from_user', to='accounts.user', verbose_name='From which user, if type is REFERRAL')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.user', verbose_name='User')),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
            },
        ),
        migrations.CreateModel(
            name='Bonus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('bonus_rule', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='accounts.bonusrule', verbose_name='Bonus Rule')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.user', verbose_name='User')),
            ],
            options={
                'verbose_name': 'Bonus',
                'verbose_name_plural': 'Bonuses',
            },
        ),
    ]
