# Generated by Django 5.1.3 on 2024-12-02 14:30

import datetime
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(verbose_name='Title')),
                ('avatar', models.ImageField(upload_to='challenge-photos/', verbose_name='Photo')),
                ('reward', models.IntegerField(verbose_name='Reward')),
                ('internal_type', models.CharField(choices=[('Real', 'Real'), ('Imitation', 'Imitation')])),
                ('imitation_timer', models.DurationField(blank=True, default=datetime.timedelta(seconds=1800), help_text='Should be set up if Internal type is IMITATION', null=True)),
                ('target_user_language', models.CharField(blank=True, help_text='Can be empty to target all languages', null=True, verbose_name='User language code')),
                ('target_user_status', models.BooleanField(default=False, help_text='Target only premium users', verbose_name='Premium')),
                ('button_text', models.CharField(default='Connect', verbose_name='Button text')),
                ('completion_limit', models.IntegerField(default=100, verbose_name='Completion limit')),
                ('redirect_link', models.URLField(blank=True, default=None, help_text='Link to redirect if task is imitation', null=True, verbose_name='Redirect link')),
            ],
            options={
                'verbose_name': 'Challenge',
                'verbose_name_plural': 'Challenges',
            },
        ),
        migrations.CreateModel(
            name='TgChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uri', models.CharField(help_text='Link should be like @[name] and the bot should be an admin', verbose_name='Channel URI')),
            ],
            options={
                'verbose_name': 'TG Channel',
                'verbose_name_plural': 'TG Channels',
            },
        ),
        migrations.CreateModel(
            name='ChallengeCompletion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('claimed', models.BooleanField(default=False, verbose_name='Reward was claimed')),
                ('can_be_claimed_in', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Can be claimed in')),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='challenges.challenge', verbose_name='Challenge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.user', verbose_name='User')),
            ],
        ),
        migrations.AddField(
            model_name='challenge',
            name='channel',
            field=models.ForeignKey(blank=True, help_text='Should be set up if internal type is REAL', null=True, on_delete=django.db.models.deletion.CASCADE, to='challenges.tgchannel', verbose_name='TG Channel'),
        ),
    ]
