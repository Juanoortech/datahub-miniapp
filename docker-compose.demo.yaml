services:
  db:
    image: postgres:17
    container_name: db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB' ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./postgres:/var/lib/postgresql/data

  backend:
    restart: always
    container_name: backend
    image: azazelh/oort-demo-backend:latest
    depends_on:
      - db
    ports:
      - 8000:8000
    env_file:
      - .env
    volumes:
      - /var/www/staticfiles:/app/staticfiles

  bot:
    restart: always
    container_name: bot
    image: azazelh/oort-demo-bot:latest
    depends_on:
      - backend
    env_file:
      - .env

  frontend:
    container_name: frontend
    image: azazelh/oort-demo-frontend:latest
    depends_on:
      - backend
    ports:
      - 3000:3000
    env_file:
      - .env